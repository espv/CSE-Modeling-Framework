{
  "name": "Experiment configuration",
  "description": "Experiment that pushes the throughput of the CEP system while varying the number of queries.",
  "query-location": "~/Research/CEP/Queries",
  "event-location": "~/Research/CEP/Events",
  "tracepoint-format": {
    "tracepointId": "int",
    "threadId": "int",
    "timestamp": "long"
  },
  "experiments": [
    {
      "name": "experiment 1 --- varying the number of queries",
      "id": 1,
      "flow": [
        {"command": "setIntervalBetweenEvents", "arguments": [0]},
        {"command": "setEventBatchSize", "arguments": [1]},
        {"command": "addStreamDefinition", "arguments": [1]},
        {"command": "addStreamDefinition", "arguments": [2]},
        {"command": "addStreamDefinition", "arguments": [3]},
        {"command": "addEvents", "arguments": [4, 1]},
        {"command": "addEvents", "arguments": [2, 1]},
        {"command": "addQueries", "arguments": [1, 1]},
        {"command": "processEvents", "arguments": [100]},
        {"command": "clearQueries"},
        {"command": "addQueries", "arguments": [1, 10]},
        {"command": "processEvents", "arguments": [100]},
        {"command": "clearQueries"},
        {"command": "addQueries", "arguments": [1, 100]},
        {"command": "processEvents", "arguments": [100]},
        {"command": "clearQueries"},
        {"command": "addQueries", "arguments": [1, 1000]},
        {"command": "processEvents", "arguments": [100]},
        {"command": "clearQueries"},
        {"command": "clearEvents"}
      ]
    },
    {
      "name": "experiment 2 --- varying the number of states in the sequence operator",
      "id": 2,
      "flow": [
        {"command": "setIntervalBetweenEvents", "arguments": [0]},
        {"command": "addStreamDefinition", "arguments": [1]},
        {"command": "addStreamDefinition", "arguments": [2]},
        {"command": "addStreamDefinition", "arguments": [3]},
        {"command": "addEvents", "arguments": [4, 1]},
        {"command": "addEvents", "arguments": [1, 100]},
        {"command": "addEvents", "arguments": [2, 100]},
        {"command": "addEvents", "arguments": [2, 100]},
        {"command": "addEvents", "arguments": [3, 1]},
        {"command": "addQueries", "arguments": [1, 1]},
        {"command": "processEvents", "arguments": [1000]},
        {"command": "clearQueries"},
        {"command": "addQueries", "arguments": [2, 1]},
        {"command": "processEvents", "arguments": [1000]},
        {"command": "clearQueries"},
        {"command": "addQueries", "arguments": [3, 1]},
        {"command": "processEvents", "arguments": [1000]},
        {"command": "clearQueries"},
        {"command": "clearEvents"}
      ]
    },
    {
      "name": "experiment 3 --- varying the number of unrelated queries",
      "id": 3,
      "flow": [
        {"command": "setIntervalBetweenEvents", "arguments": [0]},
        {"command": "addStreamDefinition", "arguments": [1]},
        {"command": "addStreamDefinition", "arguments": [2]},
        {"command": "addStreamDefinition", "arguments": [3]},
        {"command": "addEvents", "arguments": [4, 1]},
        {"command": "addEvents", "arguments": [2, 1]},
        {"command": "addEvents", "arguments": [4, 1]},
        {"command": "addEvents", "arguments": [2, 1]},
        {"command": "addEvents", "arguments": [4, 1]},
        {"command": "addEvents", "arguments": [2, 1]},
        {"command": "addEvents", "arguments": [4, 1]},
        {"command": "addEvents", "arguments": [1, 100]},
        {"command": "addEvents", "arguments": [2, 1]},
        {"command": "addEvents", "arguments": [3, 1]},
        {"command": "addQueries", "arguments": [4, 1]},
        {"command": "processEvents", "arguments": [1000]},
        {"command": "clearQueries"},
        {"command": "addQueries", "arguments": [4, 10]},
        {"command": "processEvents", "arguments": [1000]},
        {"command": "clearQueries"},
        {"command": "addQueries", "arguments": [4, 100]},
        {"command": "processEvents", "arguments": [1000]},
        {"command": "clearQueries"},
        {"command": "clearEvents"}
      ]
    }
  ],
  "cepqueries": [
    {
      "name": "temperature_GT45_and_humidity_LT25_5sec_window",
      "id": 0,
      "indata": [
        {
          "incoming": [
            {
              "id": 10,
              "reference": "temp",
              "constraints": [
                {
                  "type": "GTCONSTRAINT",
                  "name": "value",
                  "value": 45
                }
              ],
              "consumption": "SINGLE_USE",
              "windows": [
                {
                  "type": "sliding",
                  "unit": "tuple",
                  "size": 1
                },
                {
                  "type": "sliding",
                  "unit": "millisecond",
                  "size": 5000
                }
              ]
            },
            {
              "id": 11,
              "reference": "humidity",
              "constraints": [
                {
                  "type": "LTCONSTRAINT",
                  "name": "percentage",
                  "value": 25
                },
                {
                  "type": "EQCONSTRAINT",
                  "name": "area",
                  "reference": "temp"
                }
              ],
              "consumption": "SINGLE_USE",
              "windows": [
                {
                  "type": "sliding",
                  "unit": "tuple",
                  "size": 1
                },
                {
                  "type": "sliding",
                  "unit": "millisecond",
                  "size": 5000
                }
              ]
            }
          ]
        }
      ],
      "literal-query": {
        "t-rex": "",
        "siddhi": "from every t = temperatureStream [value > 45] and (h = humidityStream [percentage < 25]) select value, percentage, h.area insert into fireStream ;"
      }
    },
    {
      "name": "temperature_GT45_join_humidity_LT25_5sec_window",
      "id": 5,
      "indata": [
        {
          "incoming": [
            {
              "id": 10,
              "reference": "temp",
              "constraints": [
                {
                  "type": "GTCONSTRAINT",
                  "name": "value",
                  "value": 45,
                  "aggregation": "median"
                }
              ],
              "windows": [
                {
                  "type": "sliding",
                  "unit": "millisecond",
                  "size": 5000
                }
              ]
            },
            {
              "id": 11,
              "reference": "humidity",
              "constraints": [
                {
                  "type": "LTCONSTRAINT",
                  "name": "percentage",
                  "value": 25,
                  "aggregation": "median"
                }
              ],
              "windows": [
                {
                  "type": "sliding",
                  "unit": "millisecond",
                  "size": 5000
                }
              ]
            }
          ],
          "constraints": [
            {
              "type": "EQCONSTRAINT",
              "name": "area",
              "reference1": "temp",
              "reference2": "humidity"
            }
          ]
        }
      ],
      "literal-query": {
        "t-rex": "",
        "siddhi": "from every t = temperatureStream [value > 45] and (h = humidityStream [percentage < 25]) select value, percentage, h.area insert into fireStream;"
      }
    },
    {
      "name": "temperature_GT45_then_humidity_LT25_within_5sec",
      "id": 6,
      "indata": [
        {
          "windows": [
            {
              "type": "tumbling",
              "unit": "millisecond",
              "size": 5000
            }
          ],
          "incoming": [
            {
              "id": 10,
              "reference": "temp",
              "constraints": [
                {
                  "type": "GTCONSTRAINT",
                  "name": "value",
                  "value": 45
                }
              ],
              "consumption": "SINGLE_USE",
              "windows": [
                {
                  "type": "sliding",
                  "unit": "millisecond",
                  "size": 5000
                }
              ]
            }
          ]
        },
        {
          "incoming": [
            {
              "id": 11,
              "reference": "humidity",
              "constraints": [
                {
                  "type": "LTCONSTRAINT",
                  "name": "percentage",
                  "value": 25
                },
                {
                  "type": "EQCONSTRAINT",
                  "name": "area",
                  "reference": "temp"
                }
              ],
              "consumption": "SINGLE_USE",
              "windows": [
                {
                  "type": "sliding",
                  "unit": "millisecond",
                  "size": 5000
                }
              ]
            }
          ]
        }
      ],
      "literal-query": {
        "t-rex": "",
        "siddhi": "from every t = temperatureStream [value > 45] and (h = humidityStream [percentage < 25]) select value, percentage, h.area insert into fireStream ;"
      }
    },
    {
      "name": "then_operator_2states",
      "id": 1,
      "inevents": [10, 11],
      "constraints": [
        {"type": "GTCONSTRAINT", "name": "value", "value": 45}
      ],
      "literal-query": {
        "t-rex": "Assign 10 => Temp, 11 => Humidity, 1 => Fire\nDefine  Fire(area: string, temp: float)\nFrom   Humidity(percentage<25 and\nlast   Temp(value>45), [string] area=Temp.area)\nwithin 50000000 from Temp\nWhere   area := Temp.area, temp := Temp.value\nConsuming Temp, Humidity;",
        "siddhi": "from every t = temperatureStream [value > 45] -> (h = humidityStream [percentage < 25]) within 5 seconds select value, percentage, h.area insert into fireStream ;"
      }
    },
    {
      "name": "then_operator_10states",
      "id": 2,
      "inevents": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
      "constraints": [
        {
          "type": "GTCONSTRAINT",
          "name": "value",
          "value": 45
        }
      ],
      "literal-query": {
        "t-rex": "",
        "siddhi": ""
      },
      "stream-definitions": {
        "siddhi": ""
      }
    },
    {
      "name": "then_operator_100states",
      "id": 3,
      "inevents": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
                   20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
                   30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
                   40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
                   50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
                   60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
                   70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
                   80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
                   90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
                   100, 101, 102, 103, 104, 105, 106, 107, 108, 109],
      "constraints": [
        {
          "type": "GTCONSTRAINT",
          "name": "value",
          "value": 45
        }
      ],
      "literal-query": {
        "t-rex": "",
        "siddhi": ""
      },
      "stream-definitions": {
        "siddhi": ""
      }
    },
    {
      "name": "unrelated_query",
      "id": 4,
      "inevents": [112, 113],
      "constraints": [
        {
          "type": "GTCONSTRAINT",
          "name": "value",
          "value": 1000
        }
      ],
      "literal-query": {
        "t-rex": "",
        "siddhi": ""
      },
      "stream-definitions": {
        "siddhi": ""
      }
    }
  ],
  "stream-definitions": [
    {"id": 1, "siddhi": "define stream temperatureStream (value long, area string);"},
    {"id": 2, "siddhi": "define stream humidityStream (percentage long, area string);"},
    {"id": 3, "siddhi": "define stream fireStream (value long, percentage long, area string);"}
  ],
  "cepevents": [
    {
      "name": "temperature_22degrees",
      "id": 1,
      "stream-id": 10,
      "stream-name": "Temperature",
      "attributes": [
        {"name": "value", "value": 22},
        {"name": "area", "value": "office"}
      ]
    },
    {
      "name": "humidity_24percent",
      "id": 2,
      "stream-id": 11,
      "stream-name": "Humidity",
      "attributes": [
        {"name": "percentage", "value": 24},
        {"name": "area", "value": "office"}
      ]
    },
    {
      "name": "humidity_44percent",
      "id": 3,
      "stream-id": 11,
      "stream-name": "Humidity",
      "attributes": [
        {"name": "percentage", "value": 44},
        {"name": "area", "value": "office"}
      ]
    },
    {
      "name": "temperature_46degrees",
      "id": 4,
      "stream-id": 10,
      "stream-name": "Temperature",
      "attributes": [
        {"name": "value", "value": 46},
        {"name": "area", "value": "office"}
      ]
    }
  ],
  "tracepoints": [
    {
      "id": 1,
      "name": "receiveEvent",
      "arguments": [
        {"name": "tid", "type":  "int"},
        {"name":  "CurCepEvent", "type":  "int"}
      ],
      "description": "",
      "category": {
        "isModelEvent": true,
        "isScalingEvent": false,
        "isMilestoneEvent": true,
        "isSimulationEvent": true
      }
    },
    {
      "id": 2,
      "name": "",
      "arguments": [
        {"name": "tid", "type":  "int"},
        {"name":  "CurCepEvent", "type":  "int"}
      ],
      "description": "",
      "category": {
        "isModelEvent": true,
        "isScalingEvent": false,
        "isMilestoneEvent": false,
        "isSimulationEvent": false
      }
    },
    {
      "id": 3,
      "name": "",
      "arguments": [
        {"name": "tid", "type":  "int"},
        {"name":  "CurCepEvent", "type":  "int"}
      ],
      "description": "",
      "category": {
        "isModelEvent": true,
        "isScalingEvent": false,
        "isMilestoneEvent": false,
        "isSimulationEvent": false
      }
    },
    {
      "id": 4,
      "name": "passedConstraints",
      "arguments": [
        {"name": "tid", "type":  "int"},
        {"name":  "CurCepEvent", "type":  "int"}
      ],
      "description": "Passed constraints for query",
      "category": {
        "isModelEvent": true,
        "isScalingEvent": false,
        "isMilestoneEvent": false,
        "isSimulationEvent": false
      }
    },
    {
      "id": 6,
      "name": "createdComplexEvent",
      "arguments": [
        {"name": "tid", "type":  "int"},
        {"name":  "CurCepEvent", "type":  "int"}
      ],
      "description": "A complex event was created",
      "category": {
        "isModelEvent": true,
        "isScalingEvent": false,
        "isMilestoneEvent": true,
        "isSimulationEvent": false
      }
    },
    {
      "id": 100,
      "name": "finishedProcessingEvent",
      "arguments": [
        {"name": "tid", "type":  "int"},
        {"name":  "CurCepEvent", "type":  "int"}
      ],
      "description": "",
      "category": {
        "isModelEvent": true,
        "isScalingEvent": false,
        "isMilestoneEvent": true,
        "isSimulationEvent": false
      }
    },
    {
      "id": 221,
      "name": "addQuery",
      "arguments": [
        {"name":  "CepQuery", "type":  "int"}
      ],
      "x_variable": "numberQueries",
      "description": "Traced when deploying a query. This is a simulation and scaling event.",
      "category": {
        "isModelEvent": false,
        "isScalingEvent": true,
        "isMilestoneEvent": false,
        "isSimulationEvent": true
      }
    },
    {
      "id": 222,
      "name": "clearQueries",
      "arguments": [],
      "x_variable": "numberQueries",
      "description": "Traced when removing all deployed queries. This is a simulation and scaling event.",
      "category": {
        "isModelEvent": false,
        "isScalingEvent": true,
        "isMilestoneEvent": false,
        "isSimulationEvent": true
      }
    },
    {
      "id": 220,
      "name": "addEvent",
      "arguments": [
        {"name": "tid", "type":  "int"},
        {"name": "CepEvent", "type":  "int"}
      ],
      "x_variable": "numberEvents",
      "description": "Traced when adding an event to the allPackets queue.",
      "category": {
        "isModelEvent": false,
        "isScalingEvent": false,
        "isMilestoneEvent": false,
        "isSimulationEvent": false
      }
    },
    {
      "id": 223,
      "name": "clearEvents",
      "arguments": [],
      "x_variable": "numberEvents",
      "description": "Traced when clearing all CEP events from allPackets. This is a scaling event.",
      "category": {
        "isModelEvent": false,
        "isScalingEvent": true,
        "isMilestoneEvent": false,
        "isSimulationEvent": false
      }
    }
  ]
}
